package com.saga.test;

import java.util.List;

import com.saga.model.Arbitro;
import com.saga.telegram.service.DisponibilidadTelegramService;
import com.saga.utils.ExcelArbitroReader;

/**
 * Clase de prueba para verificar la funcionalidad de disponibilidades en Telegram
 */
public class TestDisponibilidadTelegram {
    
    public static void main(String[] args) {
        System.out.println("üß™ ===== PRUEBA DE DISPONIBILIDADES TELEGRAM =====\n");
        
        DisponibilidadTelegramService service = new DisponibilidadTelegramService();
        
        // Probar b√∫squeda de √°rbitro
        System.out.println("1Ô∏è‚É£ Probando b√∫squeda de √°rbitro por c√©dula...");
        Arbitro arbitro = service.buscarArbitroPorCedula("1023456789");
        
        if (arbitro != null) {
            System.out.println("‚úÖ √Årbitro encontrado: " + arbitro.getNombre());
            
            // Cargar disponibilidades
            System.out.println("\n2Ô∏è‚É£ Cargando disponibilidades actuales...");
            service.cargarDisponibilidadesArbitro(arbitro);
            
            // Mostrar disponibilidades actuales
            System.out.println("\n3Ô∏è‚É£ Disponibilidades actuales:");
            String disponibilidadTexto = service.obtenerDisponibilidadTexto(arbitro);
            System.out.println(disponibilidadTexto);
            
            // Probar modificaci√≥n
            System.out.println("\n4Ô∏è‚É£ Probando modificaci√≥n de disponibilidad...");
            boolean exito = service.modificarDisponibilidad(arbitro, "Viernes", "10:00", "14:00");
            System.out.println("Modificaci√≥n exitosa: " + exito);
            
            if (exito) {
                // Mostrar disponibilidades modificadas
                System.out.println("\n5Ô∏è‚É£ Disponibilidades despu√©s de la modificaci√≥n:");
                String nuevaDisponibilidad = service.obtenerDisponibilidadTexto(arbitro);
                System.out.println(nuevaDisponibilidad);
                
                // Probar guardado en Excel
                System.out.println("\n6Ô∏è‚É£ Guardando en Excel...");
                boolean guardado = service.guardarDisponibilidadEnExcel(arbitro);
                System.out.println("Guardado en Excel exitoso: " + guardado);
            }
            
        } else {
            System.out.println("‚ùå No se encontr√≥ √°rbitro con c√©dula 1023456789");
            
            // Listar √°rbitros disponibles
            System.out.println("\nüìã √Årbitros disponibles en el sistema:");
            try {
                List<Arbitro> arbitros = ExcelArbitroReader.leerArbitros("src/main/resources/data/Arbitros.xlsx");
                for (Arbitro a : arbitros) {
                    System.out.println("  ‚Ä¢ " + a.getCedula() + " - " + a.getNombre());
                }
            } catch (Exception e) {
                System.out.println("‚ùå Error leyendo √°rbitros: " + e.getMessage());
            }
        }
        
        // Probar validaciones
        System.out.println("\n7Ô∏è‚É£ Probando validaciones...");
        System.out.println("D√≠a 'viernes' v√°lido: " + service.validarDia("viernes"));
        System.out.println("D√≠a 'lunes' v√°lido: " + service.validarDia("lunes"));
        System.out.println("Hora '14:30' v√°lida: " + service.validarFormatoHora("14:30"));
        System.out.println("Hora '25:00' v√°lida: " + service.validarFormatoHora("25:00"));
        System.out.println("Normalizar 'sabado': " + service.normalizarDia("sabado"));
        
        System.out.println("\n‚úÖ ===== PRUEBA COMPLETADA =====");
    }
}
